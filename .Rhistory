install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags(,11:17)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
play()
?table
table(flags)
table(flags$landmass,flags$religion)
done()
nxt()
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red, summary)
tapply(flags$population,flags$landmass, summary)
library(datasets)
data(iris)
head(iris)
tapply(iris,iris$Species,mean)
tapply(iris$Sepal.Length,iris$Species,mean)
colMeans(iris)
rowMeans(iris[1:4])
?apply
apply(iris[,1:4],2,mean)
data(mtcars)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
?with
tapply(mtcars$mpg, mtcars$cyl, mtcars$mean)
tapply(mtcars$hp, mtcars$cyl, mean)
test <- tapply(mtcars$hp, mtcars$cyl, mean)
test[3] - test[1]
?debug
wkdir
wk.dir
wkdir()
dir()
dir("Downloads")
dir("dss")
dir()
setwd("Downloads")
setwd("dss")
setwd()
getwd
getwd()
dir()
setwd("RProgrammingWeek3/ProgrammingAssignment2/.git/")
setwd(..)
setwd("..")
getwd()
list.files()
?solve
test <- c(c(1,2),c(2,1))
test
test <- matrix(c(1,2,2,1),nrow=2)
test
solve(test)
source("cachematrix.R")
cacheSolve(test)
test2 <- makeCacheMatrix(test)
test2
cacheSolve(test2)
cacheSolve(test2)
test <- replicate(10, rnorm(20))
test
solve(test)
test <- replicate(200, rnorm(200))
test
solve(test)
test3 <- makeCacheMatrix(test)
cacheSolve(test3)
cacheSolve(test3)
